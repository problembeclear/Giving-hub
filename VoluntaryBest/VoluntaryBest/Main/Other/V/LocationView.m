//
//  LocationView.m
//  VoluntaryBest
//
//  Created by ÁéãÁíê on 2023/1/23.
//

#import "LocationView.h"
#import "Masonry.h"
#define WIDTH [UIScreen mainScreen].bounds.size.width
#define HEIGHT [UIScreen mainScreen].bounds.size.height
@implementation LocationView
- (void) initView {
    self.backgroundColor = [UIColor whiteColor];
    
    UIButton* buttonReturnMain = [UIButton buttonWithType:UIButtonTypeCustom];
    [buttonReturnMain setTitle:@"<" forState:UIControlStateNormal];
    [self addSubview:buttonReturnMain];
    buttonReturnMain.titleLabel.font = [UIFont systemFontOfSize:50];
    [buttonReturnMain setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [buttonReturnMain mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(self).with.offset(0);
        make.top.equalTo(self).with.offset(34);
        make.width.mas_equalTo(WIDTH*0.1);
        make.height.mas_equalTo(HEIGHT*0.03);
        
    }];
    [buttonReturnMain addTarget:self action:@selector(returnMian) forControlEvents:UIControlEventTouchUpInside];
    
    
    UILabel* labelLocation = [[UILabel alloc] init];
    [self addSubview:labelLocation];
    labelLocation.text = @"Âú∞Âå∫ÈÄâÊã©";
    labelLocation.font = [UIFont systemFontOfSize:30];
    labelLocation.textAlignment = NSTextAlignmentCenter;
    [labelLocation mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(buttonReturnMain).with.offset(WIDTH*0.1);
        make.top.equalTo(buttonReturnMain).with.offset(HEIGHT*0.01);
        make.width.mas_equalTo(WIDTH*0.8);
        make.height.mas_equalTo(HEIGHT*0.03);
    }];
    
    
    self.searchTextField = [[UITextField alloc] init];
    [self addSubview:self.searchTextField];
    [self.searchTextField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(buttonReturnMain).with.offset(0);
        make.top.equalTo(buttonReturnMain).with.offset(HEIGHT*0.05);
        make.width.mas_equalTo(WIDTH);
        make.height.mas_equalTo(HEIGHT*0.05);
    }];
    self.searchTextField.text = @"üîçÊêúÁ¥¢ÈôÑËøë‰ΩçÁΩÆ";
    self.searchTextField.textAlignment = NSTextAlignmentCenter;
    self.searchTextField.backgroundColor = [UIColor colorWithRed:200.0/255 green:200.0/255 blue:200.0/255 alpha:1];
    
    
    
    
    self.cityArray = [[NSMutableArray alloc] init];
    self.cityArray = [NSMutableArray arrayWithObjects:@"Êé®Ëçê", @"Âåó‰∫¨", @"‰∏äÊµ∑", @"Â§©Ê¥•", @"ÈáçÂ∫Ü", @"Ê≤≥Âåó", @"Â±±Ë•ø", @"ÂÜÖËíôÂè§", @"ËæΩÂÆÅ", @"ÂêâÊûó", @"ÈªëÈæôÊ±ü", @"Ê±üËãè", @"ÊµôÊ±ü", @"ÂÆâÂæΩ", @"Á¶èÂª∫", @"Ê±üË•ø", @"Â±±‰∏ú", @"Ê≤≥Âçó", @"ÊπñÂåó", @"Âπø‰∏ú", @"ÂπøË•ø", @"Êµ∑Âçó", @"ÂõõÂ∑ù", @"Ë¥µÂ∑û", @"‰∫ëÂçó", @"Ë•øËóè", @"ÈôïË•ø", @"ÁîòËÇÉ", @"ÈùíÊµ∑", @"ÂÆÅÂ§è", @"Êñ∞ÁñÜ", @"Âª∫ËÆæÂÖµÂõ¢", @"Âè∞Êπæ", @"È¶ôÊ∏Ø", @"Êæ≥Èó®",  nil];
    
    
    
    [self initCityScrollView];
    [self initExactScrollViewRecommend];
    
}
- (void) initCityScrollView {
    self.cityScrollView = [[UIScrollView  alloc] init];
    self.cityScrollView.contentSize = CGSizeMake(WIDTH*0.3, HEIGHT*0.05*(self.cityArray.count + 2));
    [self addSubview:self.cityScrollView];
    self.cityScrollView.scrollEnabled = YES;
    self.cityScrollView.pagingEnabled = YES;
    [self.cityScrollView mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(self.searchTextField).with.offset(0);
            make.top.equalTo(self.searchTextField).with.offset(HEIGHT*0.05);
            make.width.mas_equalTo(WIDTH*0.3);
            make.height.mas_equalTo(HEIGHT);
    }];

    for (int i = 0; i < self.cityArray.count ; i++) {
        UIButton* buttonCity = [UIButton buttonWithType:UIButtonTypeCustom];
        [self.cityScrollView addSubview:buttonCity];
        [buttonCity setTitle:self.cityArray[i] forState:UIControlStateNormal];
        [buttonCity setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        [buttonCity mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(self.cityScrollView).with.offset(0);
            make.top.equalTo(self.cityScrollView).with.offset(HEIGHT*0.05*i);
            make.width.mas_equalTo(WIDTH*0.3);
            make.height.mas_equalTo(HEIGHT*0.05);
        }];
        buttonCity.tag = i;
        [buttonCity addTarget:self action:@selector(pressCityButton:) forControlEvents:UIControlEventTouchUpInside];
        buttonCity.backgroundColor = [UIColor colorWithRed:216.0/255 green:216.0/255 blue:216.0/255 alpha:0.8];
        if (i==0) {
            buttonCity.backgroundColor = [UIColor whiteColor];
        }
    }
}
- (void)pressCityButton:(UIButton*)button {
    button.selected = !button.selected;
    if (button.selected == YES) {
        button.backgroundColor = [UIColor whiteColor];
        if (button.tag == 1) {
            [self initExactScrollViewBeijing];
        }
    } else {
        button.backgroundColor = [UIColor colorWithRed:216.0/255 green:216.0/255 blue:216.0/255 alpha:0.8];
    }
}
- (void)initExactScrollViewBeijing {
    [self.exactScrollView removeFromSuperview];
    
}
- (void) initExactScrollViewRecommend {
    
    
    
    self.exactScrollView = [[UIScrollView  alloc] init];
    self.exactScrollView.contentSize = CGSizeMake(WIDTH*0.7, HEIGHT);
    [self addSubview:self.exactScrollView];
    self.exactScrollView.scrollEnabled = YES;
    self.exactScrollView.pagingEnabled = YES;
    [self.exactScrollView mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(self.searchTextField).with.offset(WIDTH*0.3);
            make.top.equalTo(self.searchTextField).with.offset(HEIGHT*0.05);
            make.width.mas_equalTo(WIDTH*0.7);
            make.height.mas_equalTo(HEIGHT);
    }];
    
    
    
    
    
    
    UILabel* labelNow = [[UILabel alloc] init];
    [self.exactScrollView addSubview:labelNow];
    [labelNow mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(self.exactScrollView).with.offset(WIDTH*0.05);
            make.top.equalTo(self.exactScrollView).with.offset(0);
            make.width.mas_equalTo(WIDTH*0.2);
            make.height.mas_equalTo(HEIGHT*0.05);
    }];
    labelNow.textColor = [UIColor grayColor];
    labelNow.text = @"ÂΩìÂâçÂÆö‰Ωç";
    
    
    UIImageView* imageViewLocation = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"dingwei"]];
    [self.exactScrollView addSubview:imageViewLocation];
    [imageViewLocation mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(labelNow).with.offset(0);
        make.top.equalTo(labelNow).with.offset(HEIGHT*0.05);
        make.width.mas_equalTo(WIDTH*0.08);
        make.height.mas_equalTo(WIDTH*0.08);
    }];
    
    
    
    UILabel* location = [[UILabel alloc] init];
    [self.exactScrollView addSubview:location];
    [location mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(imageViewLocation).with.offset(WIDTH*0.1);
            make.top.equalTo(labelNow).with.offset(HEIGHT*0.045);
            make.width.mas_equalTo(WIDTH*0.2);
            make.height.mas_equalTo(HEIGHT*0.05);
    }];
    location.text = @"Ë•øÂÆâÂ∏Ç";
    location.font = [UIFont systemFontOfSize:25];
    
    
    
    
    UILabel* lableGPS = [[UILabel alloc] init];
    [self.exactScrollView addSubview:lableGPS];
    [lableGPS mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(location).with.offset(WIDTH*0.2 - 5);
            make.top.equalTo(location).with.offset(4);
            make.width.mas_equalTo(WIDTH*0.2);
            make.height.mas_equalTo(HEIGHT*0.05);
    }];
    lableGPS.text = @"GPSÂÆö‰Ωç";
    lableGPS.textColor = [UIColor grayColor];
    
    
    
    UILabel* labelLine = [[UILabel alloc] init];
    [self.exactScrollView addSubview:labelLine];
    labelLine.backgroundColor = [UIColor grayColor];
    [labelLine mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(imageViewLocation).with.offset(0);
        make.top.equalTo(imageViewLocation).with.offset(WIDTH*0.1);
        make.width.mas_equalTo(WIDTH*0.6);
        make.height.mas_equalTo(1);
    }];
    
    
    
    UILabel* labelRecently = [[UILabel alloc] init];
    [self.exactScrollView addSubview:labelRecently];
    [labelRecently mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(imageViewLocation).with.offset(0);
            make.top.equalTo(imageViewLocation).with.offset(WIDTH*0.1);
            make.width.mas_equalTo(WIDTH*0.2);
            make.height.mas_equalTo(HEIGHT*0.05);
    }];
    labelRecently.textColor = [UIColor grayColor];
    labelRecently.text = @"ÊúÄËøëËÆøÈóÆ";
    
    
    UIButton* buttonRecently = [UIButton buttonWithType:UIButtonTypeCustom];
    [self.exactScrollView addSubview:buttonRecently];
    [buttonRecently mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(labelRecently).with.offset(0);
            make.top.equalTo(labelRecently).with.offset(HEIGHT*0.05);
            make.width.mas_equalTo(WIDTH*0.2);
            make.height.mas_equalTo(HEIGHT*0.03);
    }];
    buttonRecently.layer.cornerRadius = HEIGHT*0.01;
    buttonRecently.layer.masksToBounds = YES;
    buttonRecently.layer.borderColor = [[UIColor grayColor] CGColor];
    buttonRecently.layer.borderWidth = 1;
    [buttonRecently setTitle:@"Ë•øÂÆâÂ∏Ç" forState:UIControlStateNormal];
    [buttonRecently setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [buttonRecently addTarget:self action:@selector(pressButton:) forControlEvents:UIControlEventValueChanged];
    
    
    UILabel* labelHot = [[UILabel alloc] init];
    [self.exactScrollView addSubview:labelHot];
    [labelHot mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(buttonRecently).with.offset(0);
            make.top.equalTo(buttonRecently).with.offset(WIDTH*0.1);
            make.width.mas_equalTo(WIDTH*0.2);
            make.height.mas_equalTo(HEIGHT*0.05);
    }];
    labelHot.textColor = [UIColor grayColor];
    labelHot.text = @"ÁÉ≠Èó®Âú∞Âå∫";
    
    
    
    
    self.recommendArray = [[NSMutableArray alloc] init];
    self.recommendArray = [NSMutableArray arrayWithObjects:@"Êù≠Â∑ûÂ∏Ç", @"‰∏äÊµ∑Â∏Ç", @"Âåó‰∫¨Â∏Ç", @"Ê≠¶Ê±âÂ∏Ç", @"Â§©Ê¥•Â∏Ç", @"Ë•øÂÆâÂ∏Ç", @"Áü≥ÂÆ∂Â∫ÑÂ∏Ç", @"ÂÖ∞Â∑ûÂ∏Ç", @"ÂêàËÇ•Â∏Ç", @"Êµ∑Âè£Â∏Ç", @"ÊàêÈÉΩÂ∏Ç", @"ÊµéÂçóÂ∏Ç", @"‰πåÈ≤ÅÊú®ÈΩê", @"ÊãâËê®Â∏Ç", @"ÈÉëÂ∑ûÂ∏Ç", @"ÈïøÊ≤ôÂ∏Ç", @"Á¶èÂ∑ûÂ∏Ç", @"Ê≤àÈò≥Â∏Ç", @"Â§™ÂéüÂ∏Ç", @"ÂëºÂíåÊµ©Áâπ", @"Èì∂Â∑ùÂ∏Ç", @"Ë•øÂÆÅÂ∏Ç", @"ÊòÜÊòéÂ∏Ç", @"ÈïøÊò•Â∏Ç", @"ÂìàÂ∞îÊª®Â∏Ç", @"Âçó‰∫¨", @"ÂçóÂÆÅÂ∏Ç", @"ÂπøÂ∑ûÂ∏Ç", @"ÂçóÊòå", @"Ë¥µÈò≥Â∏Ç", @"ÂòâÂÖ¥Â∏Ç", @"ÊπñÂ∑ûÂ∏Ç", @"ÁªçÂÖ¥Â∏Ç", @"ÈáëÂçéÂ∏Ç", @"Ë°¢Â∑ûÂ∏Ç", @"ËàüÂ±±Â∏Ç",  @"Âè∞Â∑ûÂ∏Ç", @"‰∏ΩÊ∞¥Â∏Ç", @"ÂÆÅÊ≥¢Â∏Ç", @"Ê∏©Â∑ûÂ∏Ç", nil];
    for (int i = 0, j = 0; i < self.recommendArray.count - 1; i = i + 3, j++) {
        UIButton* buttonHotOne = [UIButton buttonWithType:UIButtonTypeCustom];
        [self.exactScrollView addSubview:buttonHotOne];
        [buttonHotOne mas_makeConstraints:^(MASConstraintMaker *make) {
                make.left.equalTo(labelHot).with.offset(0);
                make.top.equalTo(labelHot).with.offset(HEIGHT*0.05 + HEIGHT*0.04*j);
                make.width.mas_equalTo(WIDTH*0.2);
                make.height.mas_equalTo(HEIGHT*0.03);
        }];
        buttonHotOne.layer.cornerRadius = HEIGHT*0.01;
        buttonHotOne.layer.masksToBounds = YES;
        buttonHotOne.layer.borderColor = [[UIColor grayColor] CGColor];
        buttonHotOne.layer.borderWidth = 1;
        [buttonHotOne setTitle:self.recommendArray[i] forState:UIControlStateNormal];
        [buttonHotOne setTitleColor:[UIColor blackColor]forState:UIControlStateNormal];
        buttonHotOne.tag = i;
        [buttonHotOne addTarget:self action:@selector(pressButton:) forControlEvents:UIControlEventTouchUpInside];
        
        UIButton* buttonHotTwo = [UIButton buttonWithType:UIButtonTypeCustom];
        [self.exactScrollView addSubview:buttonHotTwo];
        [buttonHotTwo mas_makeConstraints:^(MASConstraintMaker *make) {
                make.left.equalTo(buttonHotOne).with.offset(WIDTH*0.21);
                    make.top.equalTo(buttonHotOne).with.offset(0);
                    make.width.mas_equalTo(WIDTH*0.2);
                    make.height.mas_equalTo(HEIGHT*0.03);
            }];
        buttonHotTwo.layer.cornerRadius = HEIGHT*0.01;
        buttonHotTwo.layer.masksToBounds = YES;
        buttonHotTwo.layer.borderColor = [[UIColor grayColor] CGColor];
        buttonHotTwo.layer.borderWidth = 1;
        [buttonHotTwo setTitle:self.recommendArray[i + 1] forState:UIControlStateNormal];
        [buttonHotTwo setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        buttonHotTwo.tag = i+1;
        [buttonHotTwo addTarget:self action:@selector(pressButton:) forControlEvents:UIControlEventTouchUpInside];
        
        UIButton* buttonHotThree = [UIButton buttonWithType:UIButtonTypeCustom];
        [self.exactScrollView addSubview:buttonHotThree];
        [buttonHotThree mas_makeConstraints:^(MASConstraintMaker *make) {
                make.left.equalTo(buttonHotTwo).with.offset(WIDTH*0.21);
                make.top.equalTo(buttonHotTwo).with.offset(0);
                make.width.mas_equalTo(WIDTH*0.2);
                make.height.mas_equalTo(HEIGHT*0.03);
        }];
        buttonHotThree.layer.cornerRadius = HEIGHT*0.01;
        buttonHotThree.layer.masksToBounds = YES;
        buttonHotThree.layer.borderColor = [[UIColor grayColor] CGColor];
        buttonHotThree.layer.borderWidth = 1;
        [buttonHotThree setTitle:self.recommendArray[i + 2] forState:UIControlStateNormal];
        [buttonHotThree setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        buttonHotThree.tag = i + 2;
        [buttonHotThree addTarget:self action:@selector(pressButton:) forControlEvents:UIControlEventTouchUpInside];
        
    }
    UIButton* buttonHotThree = [UIButton buttonWithType:UIButtonTypeCustom];
    [self.exactScrollView addSubview:buttonHotThree];
    [buttonHotThree mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(labelHot).with.offset(0);
            make.top.equalTo(labelHot).with.offset(HEIGHT*0.05 + HEIGHT*0.04*13);
            make.width.mas_equalTo(WIDTH*0.2);
            make.height.mas_equalTo(HEIGHT*0.03);
    }];
    buttonHotThree.layer.cornerRadius = HEIGHT*0.01;
    buttonHotThree.layer.masksToBounds = YES;
    buttonHotThree.layer.borderColor = [[UIColor grayColor] CGColor];
    buttonHotThree.layer.borderWidth = 1;
    [buttonHotThree setTitle:@"Ê∏©Â∑ûÂ∏Ç" forState:UIControlStateNormal];
    [buttonHotThree setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    buttonHotThree.tag = self.recommendArray.count - 1;
    [buttonHotThree addTarget:self action:@selector(pressButton:) forControlEvents:UIControlEventTouchUpInside];
    
    
}
- (void)pressButton: (UIButton*)button{
    button.selected = !button.selected;
    if (button.selected == YES) {
        button.backgroundColor = [UIColor grayColor];
    } else {
        button.backgroundColor = [UIColor whiteColor];
    }
}
- (void)returnMian{
    [[NSNotificationCenter defaultCenter] postNotificationName:@"returnMain" object:nil];
}
/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

@end
